// Generated by view binder compiler. Do not edit!
package com.example.myapplicationkardioasystent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplicationkardioasystent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MissingMeasurmentNotificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText dataPomiaruInputText;

  @NonNull
  public final EditText godzinaPomiaruInputText;

  @NonNull
  public final TextView infoTextView;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final Button wprowadzWynikPomiaruPowiadomienieButton;

  @NonNull
  public final Button zamknijPowiadomienieButton;

  private MissingMeasurmentNotificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText dataPomiaruInputText, @NonNull EditText godzinaPomiaruInputText,
      @NonNull TextView infoTextView, @NonNull TextView textView3, @NonNull TextView textView4,
      @NonNull Button wprowadzWynikPomiaruPowiadomienieButton,
      @NonNull Button zamknijPowiadomienieButton) {
    this.rootView = rootView;
    this.dataPomiaruInputText = dataPomiaruInputText;
    this.godzinaPomiaruInputText = godzinaPomiaruInputText;
    this.infoTextView = infoTextView;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.wprowadzWynikPomiaruPowiadomienieButton = wprowadzWynikPomiaruPowiadomienieButton;
    this.zamknijPowiadomienieButton = zamknijPowiadomienieButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MissingMeasurmentNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MissingMeasurmentNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.missing_measurment_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MissingMeasurmentNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dataPomiaruInputText;
      EditText dataPomiaruInputText = ViewBindings.findChildViewById(rootView, id);
      if (dataPomiaruInputText == null) {
        break missingId;
      }

      id = R.id.godzinaPomiaruInputText;
      EditText godzinaPomiaruInputText = ViewBindings.findChildViewById(rootView, id);
      if (godzinaPomiaruInputText == null) {
        break missingId;
      }

      id = R.id.infoTextView;
      TextView infoTextView = ViewBindings.findChildViewById(rootView, id);
      if (infoTextView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.wprowadzWynikPomiaruPowiadomienieButton;
      Button wprowadzWynikPomiaruPowiadomienieButton = ViewBindings.findChildViewById(rootView, id);
      if (wprowadzWynikPomiaruPowiadomienieButton == null) {
        break missingId;
      }

      id = R.id.zamknijPowiadomienieButton;
      Button zamknijPowiadomienieButton = ViewBindings.findChildViewById(rootView, id);
      if (zamknijPowiadomienieButton == null) {
        break missingId;
      }

      return new MissingMeasurmentNotificationBinding((ConstraintLayout) rootView,
          dataPomiaruInputText, godzinaPomiaruInputText, infoTextView, textView3, textView4,
          wprowadzWynikPomiaruPowiadomienieButton, zamknijPowiadomienieButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
